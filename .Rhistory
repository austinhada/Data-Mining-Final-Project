knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
dat <- read.csv("Life Expectancy Data.csv") |>
filter(Year==2014) |>
select(-Year)
RNGkind(sample.kind = "Rounding")
set.seed(0)
# Combined Training and validation data
trainval_ind <- sample(1:nrow(dat), size = ceiling(0.80*nrow(dat))) %>% sort()
trainval_dat <- mutate_if(dat[trainval_ind,],
is.numeric,
function(x) ifelse(is.na(x), median(x, na.rm = T), x))
# Training Data
train_ind <- sample(trainval_ind, size = ceiling(0.60*nrow(dat))) %>% sort()
train_dat <- dat[train_ind,]
# Validation Data
val_dat <- dat[-train_ind,]
# Testing Data
test_dat <- cbind(dat[-trainval_ind,1:2],
sapply(1:ncol(dat[,-c(1,2)]), function(i){
ifelse(dat[-trainval_ind,i+2] %>% is.na(),
median(dat[trainval_ind,i+2], na.rm = T),
dat[-trainval_ind,i+2])
}) %>% as.data.frame()
)
names(test_dat) <- names(trainval_dat)
#pdf("Plots//UntransformedLinear.pdf",7.291667,4.500000)
par(mfrow= c(3,3), # plots graphs 3x3
mar = c(1,0,0,0), #Adjusts the plot margins
oma = c(0,0,0,0), # Adjusts the outer margins
mgp=c(-0.1,0,0)) # Adjusts the x-axis title
plot(Life.expectancy~.,
select(trainval_dat, -Country, -Status),
ylab = "",
xaxt='n',
yaxt='n')
#dev.off()
dat_trans <- cbind(dat[,c(1,2)],
data.frame(Life.expectancy      = dat$Life.expectancy,
Adult.Mortality_sqrt       = dat$Adult.Mortality^0.5,
infant.deaths_p0.5_log     = log(dat$infant.deaths+0.5),
Alcohol_sqrt               = dat$Alcohol^.5,
percentage.expenditure_p0.5_log = log(dat$percentage.expenditure+0.5),
Hepatitis.B_sqrt           = dat$Hepatitis.B^5,
Measles_p0.5_log           = log(dat$Measles+0.5),
BMI                        = dat$BMI,
under.five.deaths_p0.5_log      = log(dat$under.five.deaths+0.5),
Polio_5                    = dat$Polio^5,
Total.expenditure_sqrt     = dat$Total.expenditure^.5,
Diphtheria_5               = dat$Diphtheria^5,
HIV.AIDS_log               = log(dat$HIV.AIDS),
GDP_log                    = log(dat$GDP),
Population_log             = log(dat$Population),
thinness..1.19.years_log   = log(dat$thinness..1.19.years),
thinness.5.9.years_sqrt    = sqrt(dat$thinness.5.9.years),
Income.composition.of.resources = dat$Income.composition.of.resources,
Schooling                  = dat$Schooling)
)
trainval_dat_trans <- dat_trans[trainval_ind,]
train_dat_trans <- dat_trans[train_ind,]
val_dat_trans <- dat_trans[-train_ind,]
test_dat_trans <- dat_trans[-trainval_ind,]
#pdf("Plots//TransformedLinear.pdf",7.291667,4.500000)
par(mfrow= c(3,3), # plots graphs 3x3
mar = c(1,0,0,0), #Adjusts the plot margins
oma = c(0,0,0,0), # Adjusts the outer margins
mgp=c(-.10,0,0)) # Adjusts the x-axis title
plot(Life.expectancy~.,
select(trainval_dat_trans, -Country, -Status),
ylab = "",
xaxt='n',
yaxt='n')
#dev.off()
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
dat <- read.csv("Life Expectancy Data.csv") |>
filter(Year==2014) |>
select(-Year)
RNGkind(sample.kind = "Rounding")
set.seed(0)
# Combined Training and validation data
trainval_ind <- sample(1:nrow(dat), size = ceiling(0.80*nrow(dat))) %>% sort()
trainval_dat <- mutate_if(dat[trainval_ind,],
is.numeric,
function(x) ifelse(is.na(x), median(x, na.rm = T), x))
# Training Data
train_ind <- sample(trainval_ind, size = ceiling(0.60*nrow(dat))) %>% sort()
train_dat <- dat[train_ind,]
# Validation Data
val_dat <- dat[-train_ind,]
# Testing Data
test_dat <- cbind(dat[-trainval_ind,1:2],
sapply(1:ncol(dat[,-c(1,2)]), function(i){
ifelse(dat[-trainval_ind,i+2] %>% is.na(),
median(dat[trainval_ind,i+2], na.rm = T),
dat[-trainval_ind,i+2])
}) %>% as.data.frame()
)
names(test_dat) <- names(trainval_dat)
#pdf("Plots//UntransformedLinear.pdf",7.291667,4.500000)
par(mfrow= c(3,3), # plots graphs 3x3
mar = c(1,0,0,0), #Adjusts the plot margins
oma = c(0,0,0,0), # Adjusts the outer margins
mgp=c(-0.1,0,0)) # Adjusts the x-axis title
plot(Life.expectancy~.,
select(trainval_dat, -Country, -Status),
ylab = "",
xaxt='n',
yaxt='n')
#dev.off()
dat_trans <- cbind(dat[,c(1,2)],
data.frame(Life.expectancy      = dat$Life.expectancy,
Adult.Mortality_sqrt       = dat$Adult.Mortality^0.5,
infant.deaths_p0.5_log     = log(dat$infant.deaths+0.5),
Alcohol_sqrt               = dat$Alcohol^.5,
percentage.expenditure_p0.5_log = log(dat$percentage.expenditure+0.5),
Hepatitis.B_sqrt           = dat$Hepatitis.B^5,
Measles_p0.5_log           = log(dat$Measles+0.5),
BMI                        = dat$BMI,
under.five.deaths_p0.5_log      = log(dat$under.five.deaths+0.5),
Polio_5                    = dat$Polio^5,
Total.expenditure_sqrt     = dat$Total.expenditure^.5,
Diphtheria_5               = dat$Diphtheria^5,
HIV.AIDS_log               = log(dat$HIV.AIDS),
GDP_log                    = log(dat$GDP),
Population_log             = log(dat$Population),
thinness..1.19.years_log   = log(dat$thinness..1.19.years),
thinness.5.9.years_sqrt    = sqrt(dat$thinness.5.9.years),
Income.composition.of.resources = dat$Income.composition.of.resources,
Schooling                  = dat$Schooling)
)
trainval_dat_trans <- dat_trans[trainval_ind,]
train_dat_trans <- dat_trans[train_ind,]
val_dat_trans <- dat_trans[-train_ind,]
test_dat_trans <- dat_trans[-trainval_ind,]
#pdf("Plots//TransformedLinear.pdf",7.291667,4.500000)
par(mfrow= c(3,3), # plots graphs 3x3
mar = c(1,0,0,0), #Adjusts the plot margins
oma = c(0,0,0,0), # Adjusts the outer margins
mgp=c(-.10,0,0)) # Adjusts the x-axis title
plot(Life.expectancy~.,
select(trainval_dat_trans, -Country, -Status),
ylab = "",
xaxt='n',
yaxt='n')
#dev.off()
save.image("Partitioned.RData")
knitr::opts_chunk$set(echo = TRUE)
load("Partitioned.Rdata")
knitr::opts_chunk$set(echo = TRUE)
data <- read.csv("C:/Users/14193/Downloads/Life Expectancy Data.csv") %>%
filter(Year==2014)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
data <- read.csv("Life Expectancy Data.csv") %>%
filter(Year==2014)
dat=data[,-c(1,2)]
dat$Status=as.factor(dat$Status)
levels(dat$Status)=c("no","yes")
RNGkind(sample.kind = "Rounding")
set.seed(0)
partition.2 <- function(data, prop.train){
# select a random sample of size = prop.train % of total records
selected <- sample(1:nrow(data), round(nrow(data)*prop.train), replace = FALSE)
# create training data which has prop.train % of total records
data.train <- data[selected,]
# create validation data
rest <- setdiff(1:nrow(data), selected)
data.test <- data[rest,]
return(list(data.train=data.train, data.test=data.test))
}
partitioned=partition.2(dat,0.7)
training.data=partitioned$data.train
test.data=partitioned$data.test
sapply(training.data, anyNA)
# BMI,Total.expenditure,GDP,thinness.5.9,Hepatities,Population,Income composition,thinnes.1.19,schooling are the variables that were found to have missing values in training data
sapply(test.data, anyNA)
# HepatitisB,BMI, TOTAL EXPENDITURE,GDP,thinness.5.9,Population,Income composition,Alcohol,thinnnes.1.19,schooling are the variables with missing values in the test data set.
# We will first replace the missing values with the median values of the respective columns.
med.BMI.train <- median(training.data$BMI, na.rm = TRUE)
training.data$BMI[is.na(training.data$BMI)] <- med.BMI.train
test.data$BMI[is.na(test.data$BMI)] <- med.BMI.train
med.Hepatitis.train <- median(training.data$Hepatitis.B, na.rm = TRUE)
training.data$Hepatitis.B[is.na(training.data$Hepatitis.B)] <- med.Hepatitis.train
test.data$Hepatitis.B[is.na(test.data$Hepatitis.B)] <- med.Hepatitis.train
med.total_expenditure.train <- median(training.data$Total.expenditure, na.rm = TRUE)
training.data$Total.expenditure[is.na(training.data$Total.expenditure)] <- med.total_expenditure.train
test.data$Total.expenditure[is.na(test.data$Total.expenditure)] <- med.total_expenditure.train
med.GDP.train <- median(training.data$GDP, na.rm = TRUE)
training.data$GDP[is.na(training.data$GDP)] <- med.GDP.train
test.data$GDP[is.na(test.data$GDP)] <- med.GDP.train
med.thinnes1_19.train <- median(training.data$thinness..1.19.years, na.rm = TRUE)
training.data$thinness..1.19.years[is.na(training.data$thinness..1.19.years)] <- med.thinnes1_19.train
test.data$thinness..1.19.years[is.na(test.data$thinness..1.19.years)] <-  med.thinnes1_19.train
med.population.train <- median(training.data$Population, na.rm = TRUE)
training.data$Population[is.na(training.data$Population)] <- med.population.train
test.data$Population[is.na(test.data$Population)] <- med.population.train
med.income.train <- median(training.data$Income.composition.of.resources, na.rm = TRUE)
training.data$Income.composition.of.resources[is.na(training.data$Income.composition.of.resources)] <- med.income.train
test.data$Income.composition.of.resources[is.na(test.data$Income.composition.of.resources)] <- med.income.train
med.under5_deaths.train <- median(training.data$under.five.deaths, na.rm = TRUE)
training.data$under.five.deaths[is.na(training.data$under.five.deaths)] <- med.under5_deaths.train
test.data$under.five.deaths[is.na(test.data$under.five.deaths)] <- med.under5_deaths.train
med.alcohol.train <- median(training.data$Alcohol, na.rm = TRUE)
training.data$Alcohol[is.na(training.data$Alcohol)] <- med.alcohol.train
test.data$Alcohol[is.na(test.data$Alcohol)] <- med.alcohol.train
med.thinnes5_9.train <- median(training.data$thinness.5.9.years, na.rm = TRUE)
training.data$thinness.5.9.years[is.na(training.data$thinness.5.9.years)] <- med.thinnes5_9.train
test.data$thinness.5.9.years[is.na(test.data$thinness.5.9.years)] <- med.thinnes5_9.train
med.schooling.train <- median(training.data$Schooling, na.rm = TRUE)
training.data$Schooling[is.na(training.data$Schooling)] <- med.schooling.train
test.data$Schooling[is.na(test.data$Schooling)] <- med.schooling.train
sapply(training.data, anyNA)
