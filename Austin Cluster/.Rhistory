mapCountryData(mapToPlot = poop,
nameColumnToPlot="cluster",
catMethod="categorical")
mapCountryData(mapToPlot = poop,
nameColumnToPlot="cluster",
catMethod="categorical", colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
clust4_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", verbose = F)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust5_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust4, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = poop,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust5_map <- joinCountryData2Map(clust5, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust6_map <- joinCountryData2Map(clust6, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust6_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
count(as.factor(clust6$cluster))
count(as.factor(clust6$cluster))
mb_rep <- 20
mb_matrix <- matrix(NA, 14, mb_rep)
for (k in 1:mb_rep) {
mb_matrix[,k] <- Mclust(dat_continuous, k)$BIC
}
mb_rep <- 20
mb_matrix <- matrix(NA, 14, mb_rep)
for (k in 1:mb_rep) {
mb_matrix[,k] <- Mclust(dat_continuous, k)$BIC
}
mb_rep <- 20
mb_matrix <- matrix(NA, 14, mb_rep)
for (k in 1:mb_rep) {
mb_matrix[,k] <- Mclust(dat_continuous, k)$BIC
}
library(sampling)
library(tidyverse)
library(rworldmap)
library(spam)
library(sampling)
library(tidyverse)
library(rworldmap)
library(mclust)
knitr::opts_chunk$set(echo = TRUE)
library(sampling)
library(tidyverse)
knitr::opts_chunk$set(echo = TRUE)
library(sampling)
library(tidyverse)
library(rworldmap)
library(mclust)
dat <- read.csv("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/life14.csv")
load("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/initKnnImp.RData")
# dat_scaled <- scale(knnOutput)
# RNGkind (sample.kind = "Rounding")
# set.seed(0)
#
# nseeds <- 1000
nk <- 20
#
# seeds <- ceiling(runif(nseeds,0,900000))
#
# kmean_matrix  <- matrix(NA, nrow = nseeds, ncol = nk)
#
# for (k in 1:nk) {
#   seed_iter = 0
#   for (s in seeds) {
#
#     set.seed(s)
#     seed_iter <- seed_iter + 1
#
#     kmean_matrix[seed_iter,k] <- kmeans(dat_scaled, centers = k)$tot.withinss
#   }
# }
# save(kmean_matrix, file = "kmean_matrix.RData")
load("kmean_matrix.RData")
plot(1:nk,apply(kmean_matrix, 2, min),
type = "b",
ylab = "wss",
xlab = "k")
kmean_seed3 <- which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]
kmean_seed4 <- which(kmean_matrix[,4]==min(kmean_matrix[,4]))[1]
kmean_seed5 <- which(kmean_matrix[,5]==min(kmean_matrix[,5]))[1]
kmean_seed6 <- which(kmean_matrix[,6]==min(kmean_matrix[,6]))[1]
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
knitr::opts_chunk$set(echo = TRUE)
library(sampling)
library(tidyverse)
library(rworldmap)
library(mclust)
dat <- read.csv("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/life14.csv")
load("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/initKnnImp.RData")
dat_scaled <- scale(knnOutput)
# RNGkind (sample.kind = "Rounding")
# set.seed(0)
#
# nseeds <- 1000
nk <- 20
#
# seeds <- ceiling(runif(nseeds,0,900000))
#
# kmean_matrix  <- matrix(NA, nrow = nseeds, ncol = nk)
#
# for (k in 1:nk) {
#   seed_iter = 0
#   for (s in seeds) {
#
#     set.seed(s)
#     seed_iter <- seed_iter + 1
#
#     kmean_matrix[seed_iter,k] <- kmeans(dat_scaled, centers = k)$tot.withinss
#   }
# }
# save(kmean_matrix, file = "kmean_matrix.RData")
load("kmean_matrix.RData")
plot(1:nk,apply(kmean_matrix, 2, min),
type = "b",
ylab = "wss",
xlab = "k")
kmean_seed3 <- which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]
kmean_seed4 <- which(kmean_matrix[,4]==min(kmean_matrix[,4]))[1]
kmean_seed5 <- which(kmean_matrix[,5]==min(kmean_matrix[,5]))[1]
kmean_seed6 <- which(kmean_matrix[,6]==min(kmean_matrix[,6]))[1]
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
set.seed(kmean_seed4)
means4 <- kmeans(dat_scaled, centers = 4)
set.seed(kmean_seed5)
means5 <- kmeans(dat_scaled, centers = 5)
set.seed(kmean_seed6)
means6 <- kmeans(dat_scaled, centers = 6)
means3$withinss
means4$withinss
means5$withinss
means6$withinss
clust3 <- cbind(dat[,1:3],cluster = means3$cluster,knnOutput)
clust4 <- cbind(dat[,1:3],cluster = means4$cluster,knnOutput)
clust5 <- cbind(dat[,1:3],cluster = means5$cluster,knnOutput)
clust6 <- cbind(dat[,1:3],cluster = means6$cluster,knnOutput)
clust5_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust4, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = poop,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust4, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust5_map <- joinCountryData2Map(clust5, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust6_map <- joinCountryData2Map(clust6, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust6_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
set.seed(kmean_seed4)
means4 <- kmeans(dat_scaled, centers = 4)
set.seed(kmean_seed5)
means5 <- kmeans(dat_scaled, centers = 5)
set.seed(kmean_seed6)
means6 <- kmeans(dat_scaled, centers = 6)
set.seed(kmean_seed7)
kmean_seed6 <- which(kmean_matrix[,7]==min(kmean_matrix[,7]))[1]
kmean_seed3 <- which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]
kmean_seed4 <- which(kmean_matrix[,4]==min(kmean_matrix[,4]))[1]
kmean_seed5 <- which(kmean_matrix[,5]==min(kmean_matrix[,5]))[1]
kmean_seed6 <- which(kmean_matrix[,6]==min(kmean_matrix[,6]))[1]
kmean_seed7 <- which(kmean_matrix[,7]==min(kmean_matrix[,7]))[1]
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
set.seed(kmean_seed4)
means4 <- kmeans(dat_scaled, centers = 4)
set.seed(kmean_seed5)
means5 <- kmeans(dat_scaled, centers = 5)
set.seed(kmean_seed6)
means6 <- kmeans(dat_scaled, centers = 6)
set.seed(kmean_seed7)
means7 <- kmeans(dat_scaled, centers = 7)
means3$withinss
means4$withinss
means5$withinss
means6$withinss
means7$withinss
clust3 <- cbind(dat[,1:3],cluster = means3$cluster,knnOutput)
clust4 <- cbind(dat[,1:3],cluster = means4$cluster,knnOutput)
clust5 <- cbind(dat[,1:3],cluster = means5$cluster,knnOutput)
clust6 <- cbind(dat[,1:3],cluster = means6$cluster,knnOutput)
clust7 <- cbind(dat[,1:3],cluster = means7$cluster,knnOutput)
clust7_map <- joinCountryData2Map(clust7, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust6_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust6_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
means7 <- kmeans(dat_scaled, centers = 7)
kmean_seed7 <- which(kmean_matrix[,7]==min(kmean_matrix[,7]))[1]
set.seed(kmean_seed7)
means7 <- kmeans(dat_scaled, centers = 7)
means7$withinss
clust7 <- cbind(dat[,1:3],cluster = means7$cluster,knnOutput)
clust7_map <- joinCountryData2Map(clust7, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust7_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
mb_rep <- 20
mb_matrix <- matrix(NA, 14, mb_rep)
for (k in 1:mb_rep) {
mb_matrix[,k] <- Mclust(dat_continuous, k)$BIC
}
mb_rep <- 20
mb_matrix <- matrix(NA, 14, mb_rep)
for (k in 1:mb_rep) {
mb_matrix[,k] <- Mclust(knnOutput, k)$BIC
}
save(mb_matrix,file = "mb_matrix.RData")
load("mb_matrix.RData")
# mb_rep <- 20
# mb_matrix <- matrix(NA, 14, mb_rep)
#
# for (k in 1:mb_rep) {
#   mb_matrix[,k] <- Mclust(knnOutput, k)$BIC
# }
#
# save(mb_matrix,file = "mb_matrix.RData")
load("mb_matrix.RData")
plot(x=1:20,
y=apply(mb_matrix, 2, function(i) min(i,na.rm = T)),
type = "b",
xlab = "k",
ylab = "BIC")
mb_seed4 <- which(mb_matrix[,4]==min(mb_matrix[,4]))[1]
mb_seed5 <- which(mb_matrix[,5]==min(mb_matrix[,5]))[1]
mb_seed4
mb_matrix
mb_seed4 <- which(mb_matrix[,4]==min(mb_matrix[,4], na.rm = F))[1]
mb_seed5 <- which(mb_matrix[,5]==min(mb_matrix[,5], na.rm = F))[1]
mb_seed5
mb_matrix[,5]==min(mb_matrix[,5], na.rm = F)
min(mb_matrix[,5], na.rm = F)
mb_seed4 <- which(mb_matrix[,4]==min(mb_matrix[,4], na.rm = T))[1]
mb_seed5 <- which(mb_matrix[,5]==min(mb_matrix[,5], na.rm = T))[1]
mb_seed4
mb_seed5
knitr::opts_chunk$set(echo = TRUE)
library(sampling)
library(tidyverse)
library(rworldmap)
library(mclust)
dat <- read.csv("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/life14.csv")
load("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/initKnnImp.RData")
dat_scaled <- scale(knnOutput)
RNGkind (sample.kind = "Rounding")
set.seed(0)
#
# nseeds <- 1000
nk <- 20
#
seeds <- ceiling(runif(nseeds,0,900000))
RNGkind (sample.kind = "Rounding")
set.seed(0)
nseeds <- 1000
nk <- 20
seeds <- ceiling(runif(nseeds,0,900000))
#
# kmean_matrix  <- matrix(NA, nrow = nseeds, ncol = nk)
#
# for (k in 1:nk) {
#   seed_iter = 0
#   for (s in seeds) {
#
#     set.seed(s)
#     seed_iter <- seed_iter + 1
#
#     kmean_matrix[seed_iter,k] <- kmeans(dat_scaled, centers = k)$tot.withinss
#   }
# }
# save(kmean_matrix, file = "kmean_matrix.RData")
load("kmean_matrix.RData")
which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]
kmean_seed3 <- seed[which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]]
kmean_seed3 <- seeds[which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]]
kmean_seed3 <- seeds[which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]]
kmean_seed4 <- seeds[which(kmean_matrix[,4]==min(kmean_matrix[,4]))[1]]
kmean_seed5 <- seeds[which(kmean_matrix[,5]==min(kmean_matrix[,5]))[1]]
kmean_seed6 <- seeds[which(kmean_matrix[,6]==min(kmean_matrix[,6]))[1]]
kmean_seed7 <- seeds[which(kmean_matrix[,7]==min(kmean_matrix[,7]))[1]]
kmean_seed5
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
set.seed(kmean_seed4)
means4 <- kmeans(dat_scaled, centers = 4)
set.seed(kmean_seed5)
means5 <- kmeans(dat_scaled, centers = 5)
set.seed(kmean_seed6)
means6 <- kmeans(dat_scaled, centers = 6)
set.seed(kmean_seed7)
means7 <- kmeans(dat_scaled, centers = 7)
means3$withinss
means4$withinss
means5$withinss
means6$withinss
means7$withinss
clust3 <- cbind(dat[,1:3],cluster = means3$cluster,knnOutput)
clust4 <- cbind(dat[,1:3],cluster = means4$cluster,knnOutput)
clust5 <- cbind(dat[,1:3],cluster = means5$cluster,knnOutput)
clust6 <- cbind(dat[,1:3],cluster = means6$cluster,knnOutput)
clust7 <- cbind(dat[,1:3],cluster = means7$cluster,knnOutput)
clust5_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust4, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust5_map <- joinCountryData2Map(clust5, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
plot(x=1:20,
y=apply(mb_matrix, 2, function(i) min(i,na.rm = T)),
type = "b",
xlab = "k",
ylab = "BIC")
mb_matrix
mb_mod4 <- which(mb_matrix[,4]==max(mb_matrix[,4], na.rm = T))[1]
mb4 <- Mclust(knnOutput, 4)
mb5 <- Mclust(knnOutput, 5)
mb4$withinss
mb5$withinss
mb4 <- Mclust(knnOutput, 4,verbose = F)
mb4 <- Mclust(knnOutput, 4, verbose = F)
mb5 <- Mclust(knnOutput, 5, verbose = F)
mb4$withinss
mb4$call
mb4$z
mb4$classification
mbclust4 <- cbind(dat[,1:3],cluster = mb4$classification,knnOutput)
mbclust5 <- cbind(dat[,1:3],cluster = mb4$classification,knnOutput)
knitr::opts_chunk$set(echo = TRUE)
library(sampling)
library(tidyverse)
library(rworldmap)
library(mclust)
dat <- read.csv("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/life14.csv")
load("C:/Users/hadamul/OneDrive/Graduate school/Semester 4/Data Mining/Data-Mining-Final-Project/initKnnImp.RData")
dat_scaled <- scale(knnOutput)
RNGkind (sample.kind = "Rounding")
set.seed(0)
nseeds <- 1000
nk <- 20
seeds <- ceiling(runif(nseeds,0,900000))
#
# kmean_matrix  <- matrix(NA, nrow = nseeds, ncol = nk)
#
# for (k in 1:nk) {
#   seed_iter = 0
#   for (s in seeds) {
#
#     set.seed(s)
#     seed_iter <- seed_iter + 1
#
#     kmean_matrix[seed_iter,k] <- kmeans(dat_scaled, centers = k)$tot.withinss
#   }
# }
# save(kmean_matrix, file = "kmean_matrix.RData")
load("kmean_matrix.RData")
plot(1:nk,apply(kmean_matrix, 2, min),
type = "b",
ylab = "wss",
xlab = "k")
kmean_seed3 <- seeds[which(kmean_matrix[,3]==min(kmean_matrix[,3]))[1]]
kmean_seed4 <- seeds[which(kmean_matrix[,4]==min(kmean_matrix[,4]))[1]]
kmean_seed5 <- seeds[which(kmean_matrix[,5]==min(kmean_matrix[,5]))[1]]
kmean_seed6 <- seeds[which(kmean_matrix[,6]==min(kmean_matrix[,6]))[1]]
kmean_seed7 <- seeds[which(kmean_matrix[,7]==min(kmean_matrix[,7]))[1]]
set.seed(kmean_seed3)
means3 <- kmeans(dat_scaled, centers = 3)
set.seed(kmean_seed4)
means4 <- kmeans(dat_scaled, centers = 4)
set.seed(kmean_seed5)
means5 <- kmeans(dat_scaled, centers = 5)
set.seed(kmean_seed6)
means6 <- kmeans(dat_scaled, centers = 6)
set.seed(kmean_seed7)
means7 <- kmeans(dat_scaled, centers = 7)
means3$withinss
means4$withinss
means5$withinss
means6$withinss
means7$withinss
clust3 <- cbind(dat[,1:3],cluster = means3$cluster,knnOutput)
clust4 <- cbind(dat[,1:3],cluster = means4$cluster,knnOutput)
clust5 <- cbind(dat[,1:3],cluster = means5$cluster,knnOutput)
clust6 <- cbind(dat[,1:3],cluster = means6$cluster,knnOutput)
clust7 <- cbind(dat[,1:3],cluster = means7$cluster,knnOutput)
clust3_map <- joinCountryData2Map(clust3, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust3_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust4_map <- joinCountryData2Map(clust4, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
clust5_map <- joinCountryData2Map(clust5, joinCode = "NAME", nameJoinColumn = "Country", verbose = T)
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = clust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
# mb_rep <- 20
# mb_matrix <- matrix(NA, 14, mb_rep)
#
# for (k in 1:mb_rep) {
#   mb_matrix[,k] <- Mclust(knnOutput, k)$BIC
# }
#
# save(mb_matrix,file = "mb_matrix.RData")
load("mb_matrix.RData")
plot(x=1:20,
y=apply(mb_matrix, 2, function(i) min(i,na.rm = T)),
type = "b",
xlab = "k",
ylab = "BIC")
mb4 <- Mclust(knnOutput, 4, verbose = F)
mb5 <- Mclust(knnOutput, 5, verbose = F)
mbclust4 <- cbind(dat[,1:3],cluster = mb4$classification,knnOutput)
mbclust5 <- cbind(dat[,1:3],cluster = mb4$classification,knnOutput)
mbclust4_map <- joinCountryData2Map(mbclust4, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = mbclust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
mbclust5_map <- joinCountryData2Map(mbclust5, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = mbclust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
mbclust5 <- cbind(dat[,1:3],cluster = mb5$classification,knnOutput)
mbclust4_map <- joinCountryData2Map(mbclust4, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = mbclust4_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
mbclust5_map <- joinCountryData2Map(mbclust5, joinCode = "NAME", nameJoinColumn = "Country", )
par(mar=c(0,0,1,0))
mapCountryData(mapToPlot = mbclust5_map,
nameColumnToPlot="cluster",
catMethod="categorical",
colourPalette = "rainbow")
